
"""
This is the engine file for the power model, it keeps track of the power generated by the solar panels

Input: the CSV data (currently)

Output: the power generated on a timely basis (updates every 2 mins)

"""

import pandas as pd

class SolarPowerModel:
    def __init__(self, filepath, time_column="Time (UTCG)", power_column="Power (W)"):
        self.filepath = filepath
        self.time_column = time_column
        self.power_column = power_column

    def process_csv_data(self):
        try:
            data = pd.read_csv(self.filepath)
        except FileNotFoundError as e:
            print(f"Error: File not found - {e}")
            return None
        except pd.errors.ParserError as e:
            print(f"Error: Parsing error in CSV - {e}")
            return None

        if not (self.time_column in data.columns and self.power_column in data.columns):
            print(f"Error: Columns '{self.time_column}' and '{self.power_column}' not found in CSV")
            return None

        return data[[self.time_column, self.power_column]]

    def main(self):
        running_total = 0
        solar_data = self.process_csv_data()
        if solar_data is None:
            return

        for index, row in solar_data.iterrows():
            time = row[self.time_column]
            solar_power = row[self.power_column]

            running_total += solar_power

            print(f"Time: {time}, Solar Power: {solar_power} W, running total = {running_total}")

    def get_running_total(self):
        running_total = 0
        solar_data = self.process_csv_data()
        if solar_data is None:
            return

        for index, row in solar_data.iterrows():
            solar_power = row[self.power_column]
            running_total += solar_power

        return running_total
    
def get_running_total(filepath, time_column="Time (UTCG)", power_column="Power (W)"):
    model = SolarPowerModel(filepath, time_column, power_column)
    return model.get_running_total()

if __name__ == "__main__":
    filepath = r"enter the filepath"
    model = SolarPowerModel(filepath)
    model.main()
